<!DOCTYPE html>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" lang="en-US" xml:lang="en-US" data-mc-search-type="Stem" data-mc-help-system-file-name="Default.xml" data-mc-path-to-help-system="../" data-mc-conditions="Builds.knox-webhook-notification" data-mc-target-type="WebHelp2" data-mc-runtime-file-type="Topic;Default" data-mc-preload-images="false" data-mc-in-preview-mode="false" data-mc-toc-path="Web services|Knox Webhook Notification|Tutorial">
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" /><title>Knox Webhook Notification for Knox E-FOTA</title>
        <meta charset="utf-8" />
        <meta http-equiv="x-ua-compatible" content="ie=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <!-- Samsung Knox fonts -->
        <!-- Social media icons CSS-->
        <!-- Knox portal bootstrap CSS - for the header and footer and any other KP styles you use (e.g. buttons). -->
        <!-- Foundation CSS styles for body of document. -->
        <!-- Custom CSS styles. -->
        <!-- Google Analytics global site tag -->
        <script>/* <![CDATA[ */
			(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
			(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
			m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
			})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

			ga('create', 'UA-54474000-1', 'auto');
			ga('send', 'pageview');
		/* ]]> */</script>
        <link href="../Skins/Default/Stylesheets/Slideshow.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/TextEffects.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Topic.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Styles.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Tablet.css" rel="stylesheet" data-mc-generated="True" />
        <link href="../Skins/Default/Stylesheets/Components/Mobile.css" rel="stylesheet" data-mc-generated="True" />
        <style>
			@font-face {
			font-family: 'SamsungOne';
			src: url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-700.eot);
			src: url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-700.eot?#iefix) format("embedded-opentype"),
			url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-700.woff2) format("woff2"),
			url() format("woff"),
			url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-700.ttf) format("truetype");
			font-weight: 700;
			font-style: bold;
			}
			@font-face {
			font-family: 'SamsungOne';
			src: url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-400.eot);
			src: url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-400.eot?#iefix) format("embedded-opentype"),
			url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-400.woff2) format("woff2"),
			url() format("woff"),
			url(https://cdn.Samsung.com/etc/designs/smg/global/fonts/SamsungOne-400.ttf) format("truetype");
			}
		</style>
        <link href="https://use.fontawesome.com/releases/v5.14.0/css/all.css" rel="stylesheet" />
        <link href="../../../assets/merge/kp-bootstrap.css" rel="stylesheet" />
        <link href="../../../assets/merge/kp-foundation.css" rel="stylesheet" />
        <link href="../../../assets/merge/kpp-madcap.css" rel="stylesheet" />
        <script src="../Resources/Scripts/custom.modernizr.js">
        </script>
        <script src="../Resources/Scripts/jquery.min.js">
        </script>
        <script src="../Resources/Scripts/require.min.js">
        </script>
        <script src="../Resources/Scripts/require.config.js">
        </script>
        <script src="../Resources/Scripts/foundation.min.js">
        </script>
        <script src="../Resources/Scripts/plugins.min.js">
        </script>
        <script src="../Resources/Scripts/MadCapAll.js">
        </script>
    </head>
    <body>
        <!-- mobile responsive styles -->
        <div class="off-canvas-wrapper">
            <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper="">
                <div class="title-bar hide-for-medium">
                    <div class="title-bar-left">
                        <div class="menu-icon" type="button" data-open="offCanvasLeft">
                        </div><span class="title-bar-title">Menu</span>
                    </div>
                </div>
                <div class="off-canvas position-left" id="offCanvasLeft" data-off-canvas="">
                    <div id="nav-drilldown">
                    </div>
                </div>
                <div class="off-canvas-content" data-off-canvas-content="">
                    <!--header start-->
                    <div id="header">
                        <!--KP header script-->
                        <script src="../resources/masterpages/scripts/dev-header-knox.js">
                        </script>
                        <div class="documentation-header" style="background-color: #1279c5;">
                            <div class="row">
                                <div class="columns small-8">
                                    <p class="documentation-title" style="font-family: SamsungOne;font-weight: 700;font-size: x-large;margin: 0;padding-top: 20px;padding-bottom: 20px;color: white;background-color: #1279c5;"><a href="../../../dev/index.htm" style="color: #FFFFFF; text-decoration: none">DEVELOPER DOCUMENTATION</a>
                                    </p>
                                </div>
                                <div class="columns small-4">
                                    <form class="search" action="tutorial-kwn-for-efota.htm#">
                                        <div class="search-bar search-bar-container needs-pie _Skins_SearchBar mc-component">
                                            <input class="search-field needs-pie" type="search" placeholder="Search" />
                                            <div class="search-filter-wrapper">
                                                <div class="search-filter">
                                                    <div class="search-filter-content">
                                                        <ul>
                                                            <li>All Files</li>
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="search-submit-wrapper" dir="ltr">
                                                <div class="search-submit" title="Search">
                                                </div>
                                            </div>
                                        </div>
                                    </form>
                                </div>
                            </div>
                            <!--stick header start-->
                        </div>
                    </div>
                    <!-- header end -->
                    <div class="content">
                        <section id="page-content">
                            <div class="row" style="padding-top:20px">
                                <!-- in-page right TOC box -->
                                <div id="nav-accordion" class="show-for-medium medium-4 medium-centered large-3 large-centered columns" style="background:white;width:21%;">
                                    <!--Madcap TOC-->
                                    <!--Inserts the madcap search-->
                                    <!--REMOVED FROM TOC, UNCOMMENT TO ADD BACK: <MadCap:searchBarProxy />-->
                                    <!--Inserts the madcap TOC-->
                                    <ul class="menu _Skins_Menu mc-component">
                                        <li class="has-children"><a href="../assets/navheads/web-services.htm">Web services</a>
                                            <ul class="sub-menu">
                                                <li class="has-children"><a href="tutorial-kwn-for-efota.htm#">Knox Webhook Notification</a>
                                                    <ul class="sub-menu">
                                                        <li><a href="index.htm">Overview</a>
                                                        </li>
                                                        <li><a href="how-knox-webhook-notification-works.htm">About Knox Webhook Notification</a>
                                                        </li>
                                                        <li><a href="whats-new.htm">What's new</a>
                                                        </li>
                                                        <li class="has-children"><a href="tutorial-kwn-for-efota.htm#">Tutorial</a>
                                                            <ul class="sub-menu">
                                                                <li><a href="tutorial-kwn-for-efota.htm#" class="selected">For Knox E-FOTA</a>
                                                                </li>
                                                                <li><a href="tutorial-kwn-for-kg.htm">For Knox Guard</a>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                        <li class="has-children"><a href="tutorial-kwn-for-efota.htm#">API Reference</a>
                                                            <ul class="sub-menu">
                                                                <li><a href="../../devref/knox-webhook-notification/index.htm">Subscription API</a>
                                                                </li>
                                                                <li><a href="../../devref/knox-efota/index.htm">Knox E-FOTA API</a>
                                                                </li>
                                                                <li><a href="../../../devref/knox-guard/index.htm">Knox Guard API</a>
                                                                </li>
                                                            </ul>
                                                        </li>
                                                        <li><a href="error-codes.htm">Error codes</a>
                                                        </li>
                                                    </ul>
                                                </li>
                                            </ul>
                                        </li>
                                    </ul>
                                    <!-- end Madcap TOC-->
                                </div>
                                <!-- body content HTML box -->
                                <div class="small-12 medium-8 medium-centered large-9 large-centered columns" id="topic-content">
                                    <!-- topic -->
                                    <div id="sec2" class="small-12 medium-8 large-9 columns">
                                        <nav class="navbar" style="padding-top: 0px; padding-left: 0px;">
                                            <div class="container">
                                                <ul class="breadcrumbs">
                                                    <li value="1"><a href="../../../dev/index.htm">Knox Developer Documentation</a>
                                                    </li>
                                                    <li value="2"><a href="../../../dev/knox-webhook-notification/index.htm" style="font-weight: bold;">Knox Webhook Notification</a>
                                                    </li>
                                                </ul>
                                            </div>
                                        </nav>
                                        <h1>Knox Webhook Notification for Knox E-FOTA</h1>
                                        <p id="">The following tutorial will help you get started on using the Knox Webhook Notification (KWN) API for Knox E-FOTA.</p>
                                        <p>Currently, you can use KWN to call the following Knox E-FOTA events and register them with KWN to receive a change notification when the event is complete:</p>
                                        <table style="width: 100%;">
                                            <col />
                                            <col />
                                            <col />
                                            <tbody>
                                                <tr>
                                                    <td style="font-weight: bold">Event</td>
                                                    <td style="font-weight: bold">Action</td>
                                                    <td style="font-weight: bold;text-align: center;">Description</td>
                                                </tr>
                                                <tr>
                                                    <td><code>KE_DEVICE_BULK_CREATE</code>
                                                    </td>
                                                    <td>Bulk upload.</td>
                                                    <td>Allows bulk upload of devices. Supports a maximum of 10,000 devices.</td>
                                                </tr>
                                                <tr>
                                                    <td><code>KE_DEVICE_BULK_REFRESH</code>
                                                    </td>
                                                    <td>Bulk refresh.</td>
                                                    <td>Forces the Knox E-FOTA client app to refresh on multiple devices.</td>
                                                </tr>
                                                <tr>
                                                    <td><code>KE_DEVICE_BULK_DELETE</code>
                                                    </td>
                                                    <td>Bulk deletion.</td>
                                                    <td>Allows bulk deletion of devices.</td>
                                                </tr>
                                                <tr>
                                                    <td><code>KE_CAMPAIGN_DELETE</code>
                                                    </td>
                                                    <td>Campaign deletion.</td>
                                                    <td>Deletes an existing Knox E-FOTA campaign.</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                        <h2 id="prerequisites">Prerequisites</h2>
                                        <h3 id="registration">Registration</h3>
                                        <p>To successfully make calls to the Knox Guard APIs, register as a developer on <a href="https://developer.samsungknox.com/">developer.samsungknox.com</a> and download the latest Knox SDK.</p>
                                        <h3 id="authentication">Authentication</h3>
                                        <p>To start using Knox E-FOTA APIs, you need an authentication token. The way to obtain a token depends on whether you are a Knox customer or an EMM provider. For more information, see:</p>
                                        <ul>
                                            <li value="1"><a href="../../../dev/knox-cloud-authentication/tutorial.htm" target="_blank">Knox Cloud API Authentication tutorial for customers</a>
                                            </li>
                                            <li value="2"><a href="../../../dev/knox-cloud-authentication/third-party-auth/overview.htm" target="_blank">Knox Cloud API Authentication tutorial for EMMs</a>
                                            </li>
                                        </ul>
                                        <h3 id="certificate">Certificate</h3>
                                        <p>Download your Samsung Knox validation certificate. You'll need this to validate the response you'll receive from KWN.</p><a class="round-button" href="../../../cloud-authentication/download/samsung-knox-validation-certificate.zip" target="_blank" style="padding-top: 2p;margin-top: 0px;margin-bottom: 21px; margin-left: 0;">DOWNLOAD CERTIFICATE</a>
                                        <h2 id="use-knox-webhook-notification-api">Use the Knox Webhook Notification API</h2>
                                        <h3 id="upload-devices">Upload devices</h3>
                                        <p>This tutorial demonstrates how you can use KWN to call the Knox E-FOTA upload devices event to bulk upload 10,000 devices, and register the event with KWN to receive change notifications when the upload is complete.</p>
                                        <h4 id="step-1-subscription">Step 1: Subscribe an event</h4>
                                        <p>Subscribe a particular event to KWN through the <b>Create Subscription</b> operation — <code> POST /kcs/kwn/v0.1/subscriptions:</code></p>
                                        <ul>
                                            <li value="1">Provide a subscription URL — known as a "callback" — that you'll register to receive asynchronous API operation results once the event is complete.</li>
                                            <li value="2">Register the <code>KE_DEVICE_BULK_CREATE</code> event to asynchronously receive the API operation result on the device upload API operation once it's complete.</li>
                                        </ul>
                                        <h4 id="step-2-upload-devices">Step 2: Upload a device</h4>
                                        <p>Upload the devices. The upload operation makes an API call to the <a href="../../devref/knox-efota/index.htm#tag/Device/paths/~1devices~1upload/post" target="_blank">Knox E-FOTA upload devices operation</a>.</p>
                                        <h4 id="step-3-handle-response-message">Step 3: Handle response message</h4>
                                        <p>After Knox E-FOTA finishes executing the requested operation — uploading of 10,000 devices — you'll receive the following message in the body of the subscribed URL call as the response payload:</p>
                                        <div id="Java1" class="tabcontent1" style="display:block"><pre class="prettyprint" xml:space="preserve">
{
  "event": "KE_DEVICE_BULK_CREATE",
  "subscriptionId": "63689d7e4ee2721f7b50d2b1",
  "payload": {
    "successCount": 1,
    "failureCount": 1,
    "successfulDevices": [
      {
        "imei": "354721981931820",
        "serialNumber": null,
        "deviceId": null
      }
    ],
    "failedDevices": [
      {
        "imei": "355745090079329",
        "serialNumber": null,
        "error": "This IMEI [355745090079329] already exists for different reseller and customer"
      }
    ]
  }
}
        </pre>
                                        </div>
                                        <h3 id="multiple-uploads">Multiple Upload Events</h3>
                                        <p>You can use the same KWN subscription with multiple bulk device upload events, as follows:</p>
                                        <ul>
                                            <li value="1">You must set the <code>X-WSM-TXID</code> header when you call the Knox E-FOTA bulk device upload API operation.</li>
                                            <li value="2">Once the API operation is complete, Knox E-FOTA will pass the value of <code>X-WSM-TXID</code> to KWN.</li>
                                            <li value="3">Then, KWN will assign the value of <code>X-WSM-TXID</code> to the <code>X-WSM-TRACEID</code> header when calling the KWN callback URL.</li>
                                        </ul>
                                        <p class="callout note"><b>NOTE</b> — Currently, you must use the Knox E-FOTA <code>X-WSM-TXID</code> header from the Knox E-FOTA API, and the KWN <code>X-WSM-TRACEID</code> header.</p>
                                        <h2 id="verify-response">Verify the response</h2>
                                        <p>To verify the KWN callback response:</p>
                                        <ol>
                                            <li value="1">Get the String value of <code>HttpRequestPayload</code></li>
                                            <div id="Java2" class="tabcontent1" style="display:block"><pre class="prettyprint" xml:space="preserve">
byte[] inputStreamBytes = StreamUtils.copyToByteArray(request.getInputStream());
Map jsonBody = objectMapper.readValue(inputStreamBytes, HashMap.class);
String requestBody = objectMapper.writeValueAsString(jsonBody);            
            </pre>
                                            </div>
                                            <li value="2">Parse the encoded JoseHeader and signature from <b>X-WSM-SIGNATURE</b></li>
                                            <div id="Java3" class="tabcontent1" style="display:block"><pre class="prettyprint" xml:space="preserve">
String[] jwsParts = jwsSignature.split("\\.");
if (jwsParts.length != 3) {
  // Invalid JWS signature,              
  return new ResponseEntity&lt;&gt;("Invalid JWS signature: X-WSM-SIGNATURE=" + jwsSignature, HttpStatus.BAD_REQUEST);
}

String encodedHeaders = jwsParts[0];
String encodedRequestBody =  Base64.getUrlEncoder().encodeToString(requestBody.getBytes(StandardCharsets.UTF_8));
String signature = jwsParts[2];            
            </pre>
                                            </div>
                                            <li value="3">Prepare the data to verify: <code>DataToVerify = encodedJoseHeader.Base64UrlEncode(HttpRequestPayload)
          </code></li>
                                            <div id="Java4" class="tabcontent1" style="display:block"><pre class="prettyprint" xml:space="preserve">
String dataToVerify = encodedHeaders + "." + encodedRequestBody;
            </pre>
                                            </div>
                                            <li value="4">Decode the signature with <code>Base64Url</code> decoder and verify the data above by using <code>SHA256withRSA</code></li>
                                            <ul>
                                                <li value="1">verify(DataToVerify, Base64UrlDecode(Signature))</li>
                                            </ul>
                                            <div id="Java5" class="tabcontent1" style="display:block"><pre class="prettyprint" xml:space="preserve">
byte[] signatureByte = Base64.getUrlDecoder().decode(signature);

Signature rsaSignature = Signature.getInstance("SHA256withRSA");

// Pre-download Samsung certificate and store it locally with your application. Load public key from locallyed stored cert file.

rsaSignature.initVerify(publicKey);  
rsaSignature.update(dataToVerify.getBytes(StandardCharsets.UTF_8));
boolean verified = rsaSignature.verify(signatureByte);
if (verified) {
  // Process the result
  // DO YOUR BUSINESS LOGIC, returns OK

  return new ResponseEntity&lt;&gt; ("Result is processed successfully", HttpStatus.OK);
} else {
  return new ResponseEntity&lt;&gt;("Signature validation failed: X-WSM-SIGNATURE=" + jwsSignature, HttpStatus.INTERNAL_SERVER_ERROR);
}
            </pre>
                                            </div>
                                        </ol>
                                        <p><h3>Complete code</h3>
                                        </p>
                                        <div id="Java6" class="tabcontent1" style="display:block"><pre class="prettyprint" xml:space="preserve">
public ResponseEntity&lt;String&gt; receiveResult(HttpServletRequest request,
  @Valid @NotBlank @RequestHeader(value="X-WSM-SIGNATURE") String jwsSignature,
  @Valid @NotBlank @RequestHeader(value="X-WSM-TRACEID") String transId) {
      try {
      // 1. Get the request body
      byte[] inputStreamBytes = StreamUtils.copyToByteArray(request.getInputStream());
      Map jsonBody = objectMapper.readValue(inputStreamBytes, HashMap.class);
      String requestBody = objectMapper.writeValueAsString(jsonBody);

      // 2. Verify the data and signature
      String[] jwsParts = jwsSignature.split("\\.");
      if (jwsParts.length != 3) {
        // Invalid JWS signature,              
        return new ResponseEntity&lt;&gt;("Invalid JWS signature: X-WSM-SIGNATURE=" + jwsSignature, HttpStatus.BAD_REQUEST);
      }

      String encodedHeaders = jwsParts[0];
      String encodedRequestBody =  Base64.getUrlEncoder().encodeToString(requestBody.getBytes(StandardCharsets.UTF_8));
      String signature = jwsParts[2];

      String dataToVerify = encodedHeaders + "." + encodedRequestBody;
      byte[] signatureByte = Base64.getUrlDecoder().decode(signature);

      Signature rsaSignature = Signature.getInstance("SHA256withRSA");

      // Pre-download Samsung certificate and store it locally with your application. Load public key from locallyed stored cert file.

      rsaSignature.initVerify(publicKey);  
      rsaSignature.update(dataToVerify.getBytes(StandardCharsets.UTF_8));
      boolean verified = rsaSignature.verify(signatureByte);
      if (verified) {
        // 3. Process the result
        // DO YOUR BUSINESS LOGIC and returns OK

        return new ResponseEntity&lt;&gt; ("Result is processed successfully", HttpStatus.OK);
      } else {
        return new ResponseEntity&lt;&gt;("Signature validation failed: X-WSM-SIGNATURE=" + jwsSignature, HttpStatus.INTERNAL_SERVER_ERROR);
      }

    } catch (Exception e) {
      log.error("receiveResult: failed to verify or parse request body", e);
      return new ResponseEntity&lt;&gt;("Internal error: " + e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
    }
  }
          </pre>
                                        </div>
                                        <h2 id="one-url-many-sub">One URL for multiple subscriptions</h2>
                                        <p>You can also configure one URL across multiple subscriptions by following the <a href="tutorial-kwn-for-efota.htm#one-url-per-sub" class="selected">steps mentioned below</a>. However, you must meet the following conditions:</p>
                                        <ul>
                                            <li value="1">No API calls are made to the same event more than once, that is, the events must be unique across all your subscriptions.</li>
                                            <li value="2">The number of subscriptions you can create can at most be equal to the number of unique events you can call using KWN.</li>
                                        </ul>
                                        <p class="callout note"><b>NOTE</b> — As a customer, the maximum number of subscriptions you create should be equal to the number of unique events you can call using KWN. Check out <a href="whats-new.htm">What's New</a> for a list of all the events that KWN currently supports.</p>
                                        <h2 id="emms-multiple-customers">For EMMs with multiple customers</h2>
                                        <p>KWN also supports EMMs that will make API calls to the Knox E-FOTA API on behalf of customers. You can make multiple subscriptions either by configuring a separate URL for each subscription or using the same URL across all subscriptions.</p>
                                        <h3 id="one-url-per-sub">One URL per subscription</h3>
                                        <p>You can configure one URL while creating a subscription, as follows:</p>
                                        <ol>
                                            <li value="1">Use <b>companyA</b> to create the subscription using the KWN Subscription API.</li>
                                            <li value="2">Configure <code>example.com/kwn_result/companyA</code> as the callback URL.</li>
                                            <li value="3">Make a call to one of the <a href="whats-new.htm">supported events</a>, for example, the Knox E-FOTA bulk device upload API operation.</li>
                                        </ol>
                                        <p>Once you successfully complete these steps, the configured URL <code>example.com/kwn_result/companyA</code> will receive the operation result.</p>
                                        <p>Similarly, after repeating all the aforementioned steps for <b>companyB</b>, <code>example.com/kwn_result/companyB</code> will receive the operation result for a different subscription associated with <b>companyB</b>.</p>
                                        <!-- Inserts feedback module here -->
                                        <div id="feedback">
                                        </div>
                                        <!-- Commented out until the Rebrandly service is approved, contact Kevin for status-->
                                        <!-- Link sharing -->
                                        <!--<div style="text-align: center; font-size: 1.8em "><span style="font-size: 0.8em; text-transform: uppercase;font-weight: 700;">Share it:</span><a rel="external nofollow" style="width:40px;height:40px; display:inline-block" onclick="tweetFunction();" target="_blank" title="Share on Twitter"><i class="fab fa-twitter"></i></a><a rel="external nofollow" style="width:40px;height:40px; display:inline-block" onclick="linkedinFunction();" target="_blank" title="Share on LinkedIn"><i class="fab fa-linkedin-in"></i></a><a rel="external nofollow" style="width:40px;height:40px; display:inline-block" onclick="emailFunction();" target="_blank" title="Share via email"><i class="fas fa-envelope"></i></a><a rel="external nofollow" style="width:40px;height:40px; display:inline-block" onclick="copyFunction(this);" target="_blank" title="Copy to clipboard"><i class="fas fa-copy"></i></a><i style="text-align: center; font-size: 0.5em; position:absolute; "></i>
										</div>
										<script src="https://docs.samsungknox.com/assets/merge/share/share-twitter.js">
										</script>
										<script src="https://docs.samsungknox.com/assets/merge/share/share-linkedin.js">
										</script>
										<script src="https://docs.samsungknox.com/assets/merge/share/share-email.js">
										</script>
										<script src="https://docs.samsungknox.com/assets/merge/share/share-copy.js">
										</script>-->
                                    </div>
                                    <div class="medium-3 large-3 hide-for-small-only columns sticky-container" data-sticky-container="" data-magellan="">
                                        <!-- hide for side bar -->
                                        <div class="sticky" data-sticky="" data-anchor="sec2">
                                            <br />
                                            <br />
                                            <br />
                                            <h7 />
                                            <ul>
                                                <aside />
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
        </div>
        <div class="off-canvas-wrapper">
        </div>
        <!-- MadCap scripts -->
        <script type="text/javascript" src="../../../assets/merge/what-input.js">
        </script>
        <script type="text/javascript" src="../../../assets/merge/foundation.js">
        </script>
        <script type="text/javascript" src="../../../assets/merge/foundation-menu-off-canvas-initialisation.js">
        </script>
        <script type="text/javascript" src="../../../assets/merge/madcap.js">
        </script>
        <script type="text/javascript" src="../../../assets/merge/openTab.js">
        </script>
        <!-- Format left ToC headings  -->
        <script>/* <![CDATA[ */
			($("a[href='http://docs.samsungknox.com/dev/assets/navheads/welcome.htm']").replaceWith("<p style='padding-top:20px;text-transform:uppercase;'><b>Basics</b></p>"))
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			($("a[href='http://docs.samsungknox.com/dev/assets/navheads/device-apps.htm']").replaceWith("<p style='padding-top:20px;text-transform:uppercase;'><b>Device Apps</b></p>"))
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			($("a[href='http://docs.samsungknox.com/dev/assets/navheads/web-services.htm']").replaceWith("<p style='padding-top:20px;text-transform:uppercase;'><b>Web Services</b></p>"))
		/* ]]> */</script>
        <script>/* <![CDATA[ */
			($("a[href='http://docs.samsungknox.com/dev/assets/navheads/configurations.htm']").replaceWith("<p style='padding-top:20px;text-transform:uppercase;'><b>Managed Configurations</b></p>"))
		/* ]]> */</script>
        <!-- Prettify code snippets -->
        <script type="text/javascript" src="../resources/masterpages/scripts/prettify/prettify.js">
        </script>
        <img src="../resources/masterpages/scripts/prettify/onload.png" onload="prettyPrint()" class="fix" style="display: none;" />
        <!-- Back-to-top-button-JS -->
        <script src="../resources/masterpages/scripts/back-to-top-button.js">
        </script>
        <!-- Back-to-top-button -->
        <div id="back-to-top">
        </div>
        <!-- Feedback module -->
        <script src="../../../assets/merge/feedback-module.js">
        </script>
        <script src="../../../assets/merge/google-analytics-event-script.js">
        </script>
        <!-- Footer -->
        <script src="../../../assets/kpp/kpp-footer.js">
        </script>
        <!-- dynamic meta tags -->
        <script type="text/javascript" src="../../../assets/merge/og-meta-tags-dev.js">
        </script>
    </body>
</html>
